{"version":3,"sources":["utility/browser/CompatFunctions.js","elements/Link/index.js","elements/form/SearchInput/styles.js","elements/form/SearchInput/index.js","utility/accessibility/AccessibilityFunctions.js","components/NavigationBar/styles.js","components/NavigationBar/NavigationSearch.js","components/NavigationBar/index.js","templates/DefaultTemplate/styles.js","templates/DefaultTemplate/index.js","api/ApiDirectory.js","api/BlockchainApi/index.js","api/BaseJsonApi.js","api/BaseApi.js","utility/datetime/DateFunctions.js","features/blocks/context.js","features/blocks/BlockSummaryCard/styles.js","features/blocks/BlockSummaryCard/index.js","features/transactions/TransactionListView/styles.js","features/transactions/TransactionCard/styles.js","features/transactions/TransactionCard/index.js","features/transactions/TransactionListView/index.js","features/blocks/BlockDashboard/styles.js","features/blocks/BlockDashboard/index.js","pages/NewBlocksPage/styles.js","pages/NewBlocksPage/index.js","pages/BlockDetailsPage/index.js","pages/TransactionDetailsPage/styles.js","pages/TransactionDetailsPage/index.js","pages/PageDirectory.js","serviceWorker.js","index.js","routes.js"],"names":["isIE","test","navigator","userAgent","Link","_this$props","this","props","children","url","attrs","Object","objectWithoutProperties","styleOverride","color","textDecoration","startsWith","react_default","a","createElement","react_router_dom","assign","exact","to","style","href","target","rel","React","Component","styles","root","padding","display","alignItems","width","height","input","marginLeft","flex","iconButton","SearchInput","state","inputValue","func","_this2","classes","Paper_default","className","elevation","InputBase_default","placeholder","value","onChange","event","setState","onKeyPress","onSubmit","e","keyCode","which","preventDefault","IconButton_default","aria-label","onClick","Search_default","withStyles","theme","_mobileSearchButton","container","overflowY","flexWrap","minHeight","transition","concat","navbarTransitionMs","containerExpanded","defineProperty","navbarHeight","breakpoints","up","grow","flexGrow","title","mobileSearchButton","fill","search","BLOCK_NUMBER_OF_LEADING_ZEROES","NavigationSearch","blockRegex","RegExp","window","location","exec","PageDirectory","BLOCK_DETAILS_PAGE","TRANSACTION_DETAILS_PAGE","path","replace","prevProps","searchExpanded","setTimeout","searchInput","document","querySelector","id","focus","form_SearchInput","NavigationBar","mobileSearchExpanded","toggleMobileSearchExpanded","_this","AppBar_default","position","Toolbar_default","classNames","Typography_default","variant","noWrap","Link_Link","MagnifyClose_default","NavigationBar_NavigationSearch","body","paddingTop","marginBottom","DefaultTemplate","Fragment","components_NavigationBar","Grid_default","justify","item","xs","sm","lg","ApiDirectory","BLOCKCHAIN_API","proxyUrl","BlockchainApi","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hash","sendRequest","BaseJsonApi","api","baseOptions","arguments","length","undefined","headers","options","get","prototype","then","result","json","BaseApi","baseUrl","fetch","catch","console","error","convertUnixToDateTime","unixTimestamp","date","Date","toLocaleDateString","toLocaleTimeString","BlockContext","createContext","updateHash","card","tableTitle","fontSize","fontWeight","tableContainer","maxWidth","paddingRight","& tr:nth-of-type(odd)","backgroundColor","hashesContainer","blockHash","& a","overflow","textOverflow","tableRow","TableRow_default","TableCell_default","BlockSummaryCard","data","blockData","Card_default","CardContent_default","spacing","md","Table_default","TableBody_default","n_tx","time","fee","bits","prev_block","context","next_block","map","key","CardActions_default","Button_default","size","open","contextType","transactionHeader","cursor","transactionDetails","&> div","boxShadow","flexDirection","justifyContent","cardContent","paddingBottom","loadingContainer","table","initialState","_ref","apiError","isLoading","transactionData","TransactionCard","fetchTransactionData","getTransactionDetails","tx_index","block_index","block_height","CircularProgress_default","nextProps","prevState","TransactionListView","page","selectedTransaction","handleTransactionSelected","transaction","isAlreadySelected","transactions","transactionsInView","slice","isSelected","ButtonBase_default","ExpandLess_default","ExpandMore_default","transactions_TransactionCard","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","count","rowsPerPage","SelectProps","native","onChangePage","tabContainer","tabIndex","BlockDashboard","fetchBlockDetails","getBlockDetails","Tabs","indicatorColor","textColor","centered","index_es","label","blocks_BlockSummaryCard","transactions_TransactionListView","tx","toolbar","NewBlocksPage","isWebSocketEnabled","newHash","latestBlockHash","toggleAutoUpdate","startWebSocket","stopWebSocket","socket","send","JSON","stringify","op","getLatestBlock","WebSocket","onopen","onmessage","parse","x","close","templates_DefaultTemplate","FormControlLabel_default","control","Switch_default","checked","labelPlacement","Provider","blocks_BlockDashboard","BlockDetailsPage","match","params","margin","TransactionDetailsPage","pageDirectory","NEW_BLOCKS_PAGE","component","Boolean","hostname","ReactDOM","render","CssBaseline_default","react_router","keys","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b87c56b7.chunk.js","sourcesContent":["\nexport const isIE = /MSIE/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent)\n","// @flow\nimport React from 'react'\nimport type { Node } from 'react'\nimport { NavLink as InternalLink } from 'react-router-dom'\n\nimport { isIE } from 'src/utility/browser/CompatFunctions'\n\ntype Props = {\n  children: Node,\n  style?: Object,\n  url: string\n}\nexport default class Link extends React.Component<Props> {\n\n  render () {\n    const { children, url, ...attrs } = this.props\n    const styleOverride = { color: 'inherit', textDecoration: 'none' }\n\n    return (\n      url.startsWith('/') ? (\n        <InternalLink exact to={url} {...attrs} style={styleOverride}>\n          {children}\n        </InternalLink>\n      ) : (\n        <a href={url} target={isIE ? '_self' : '_blank'} rel='noopener' {...attrs} style={styleOverride}>\n          {children}\n        </a>\n      )\n    )\n  }\n}\n","const styles = {\n  root: {\n    padding: '0 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    height: 36\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n}\nexport default styles\n","// @flow\nimport React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport { onEnterKeyPress } from 'src/utility/accessibility/AccessibilityFunctions'\n\nimport styles from './styles'\n\ntype Props = {\n  classes: Object,\n  onSubmit: (string) => void,\n  placeholder: string\n}\ntype State = {\n  inputValue: string\n}\nclass SearchInput extends React.Component<Props, State> {\n\n  state = {\n    inputValue: ''\n  }\n\n  render () {\n    const { classes } = this.props\n\n    return (\n      <Paper className={classes.root} elevation={1}>\n        <InputBase\n          className={classes.input}\n          placeholder={this.props.placeholder}\n          value={this.state.inputValue}\n          onChange={event => { this.setState({ inputValue: event.target.value }) }}\n          onKeyPress={onEnterKeyPress(() => { this.props.onSubmit(this.state.inputValue) })}\n        />\n        <IconButton\n          className={classes.iconButton}\n          aria-label='Search'\n          onClick={() => { this.props.onSubmit(this.state.inputValue) }}\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(SearchInput)\n","\nexport const onEnterKeyPress = (func) => {\n  const returnFunction = (e) => {\n    if (e.keyCode === 13 || e.which === 13) {\n      e.preventDefault()\n      func()\n    }\n  }\n  return returnFunction\n}\n","export const navbarHeight = 48\nexport const navbarTransitionMs = 300\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    overflowY: 'hidden',\n    flexWrap: 'wrap',\n    height: navbarHeight,\n    minHeight: navbarHeight,\n    transition: `height ${navbarTransitionMs / 1000}s ease-out`\n  },\n  containerExpanded: {\n    padding: '0 1rem 1rem',\n    height: navbarHeight * 2,\n    [theme.breakpoints.up('sm')]: {\n      padding: '0 1rem',\n      height: navbarHeight\n    }\n  },\n  grow: {\n    flexGrow: 1\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  mobileSearchButton: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    '& svg': {\n      fill: 'white'\n    }\n  },\n  search: {\n    display: 'block',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '350px'\n    }\n  }\n})\nexport default styles\n","// @flow\nimport React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport PageDirectory from 'src/pages/PageDirectory'\nimport SearchInput from 'src/elements/form/SearchInput'\n\nimport styles, { navbarTransitionMs } from './styles'\n\nconst BLOCK_NUMBER_OF_LEADING_ZEROES = 10\n\ntype Props = {\n  classes: Object,\n  id: string,\n  searchExpanded: boolean\n}\nclass NavigationSearch extends React.Component<Props> {\n\n  componentDidUpdate (prevProps: Props): void {\n    // If the search has just been toggled, focus the search bar\n    if (this.props.searchExpanded && !prevProps.searchExpanded) {\n      setTimeout(() => {\n        const searchInput: any = document.querySelector(`#${this.props.id} input`)\n        if (searchInput) searchInput.focus()\n      }, navbarTransitionMs)\n    }\n  }\n\n  onSubmit = (value: string) => {\n    // Decide whether to redirect the user to block details or transaction details page\n    const blockRegex = new RegExp('^[0]{' + BLOCK_NUMBER_OF_LEADING_ZEROES + ',}.*')\n\n    window.location = (blockRegex.exec(value)\n      ? PageDirectory.BLOCK_DETAILS_PAGE : PageDirectory.TRANSACTION_DETAILS_PAGE)\n      .path.replace(':id', value)\n  }\n\n  render () {\n    return (\n      <div\n        id={this.props.id}\n        className={this.props.classes.search}\n      >\n        <SearchInput\n          placeholder='Search by block/transaction hash'\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    )\n  }\n}\nexport default withStyles(styles)(NavigationSearch)\n","// @flow\nimport React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CloseSearchIcon from 'mdi-material-ui/MagnifyClose'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nimport Link from 'src/elements/Link'\n\nimport NavigationSearch from './NavigationSearch'\nimport styles from './styles'\n\ntype Props = {\n  classes: Object\n}\ntype State = {\n  mobileSearchExpanded: boolean\n}\nclass NavigationBar extends React.Component<Props, State> {\n\n  state = {\n    mobileSearchExpanded: false\n  }\n\n  toggleMobileSearchExpanded = () => {\n    this.setState({ mobileSearchExpanded: !this.state.mobileSearchExpanded })\n  }\n\n  render () {\n    const { classes } = this.props\n    const { mobileSearchExpanded } = this.state\n\n    return (\n      <AppBar position='sticky' className={classes.root}>\n        <Toolbar\n          className={classNames(classes.container, {\n            [classes.containerExpanded]: mobileSearchExpanded\n          })}\n        >\n          <Typography variant='h6' color='inherit' noWrap>\n            <Link url='/'>\n              Blockchain Viewer\n            </Link>\n          </Typography>\n          <div className={classes.grow} />\n          <IconButton\n            className={classes.mobileSearchButton}\n            aria-label='Toggle search bar display'\n            onClick={this.toggleMobileSearchExpanded}\n          >\n            { mobileSearchExpanded ? <CloseSearchIcon /> : <SearchIcon /> }\n          </IconButton>\n          <NavigationSearch\n            id='navigation-search'\n            searchExpanded={mobileSearchExpanded}\n          />\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\nexport default withStyles(styles)(NavigationBar)\n","const styles = {\n  body: {\n    paddingTop: '2rem',\n    marginBottom: '4rem'\n  }\n}\nexport default styles\n","// @flow\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport NavigationBar from 'src/components/NavigationBar'\n\nimport styles from './styles'\n\ntype Props = {\n  children: Node,\n  classes: Object\n}\nclass DefaultTemplate extends React.Component<Props> {\n  render () {\n    return (\n      <>\n        <NavigationBar />\n        <Grid container justify='center' className={this.props.classes.body}>\n          <Grid item xs={11} sm={10} lg={8}>\n            { this.props.children }\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\nexport default withStyles(styles)(DefaultTemplate)\n","import type { ApiType } from './types'\n\nconst ApiDirectory: { [string]: ApiType } = {\n  BLOCKCHAIN_API: {\n    url: 'https://blockchain.info',\n    proxyUrl: '/api/blockchain'\n  }\n}\nexport default ApiDirectory\n","// @flow\nimport ApiDirectory from '../ApiDirectory'\nimport BaseJsonApi from '../BaseJsonApi'\n\nexport default class BlockchainApi extends BaseJsonApi {\n\n  constructor () {\n    super(ApiDirectory.BLOCKCHAIN_API)\n  }\n\n  getTransactionDetails (hash: string) {\n    return this.sendRequest('/rawtx/' + hash)\n  }\n\n  getBlockDetails (hash: string) {\n    return this.sendRequest('/rawblock/' + hash)\n  }\n\n  getLatestBlock () {\n    return this.sendRequest('/latestblock')\n  }\n}\n","// @flow\nimport BaseApi from './BaseApi'\nimport type { ApiType } from './types'\n\n/**\n * Convenience class for APIs that only return JSON as a content type\n */\nexport default class BaseJsonApi extends BaseApi {\n\n  constructor (api: ApiType, baseOptions?: Object = {}) {\n    if (!baseOptions.headers) {\n      baseOptions.headers = {}\n    }\n    baseOptions.headers['Content-Type'] = 'application/json'\n    super(api, baseOptions)\n  }\n\n  sendRequest (url: string, options: Object = {}) {\n    return super.sendRequest(url, options).then(result => result.json())\n  }\n}\n","// @flow\nimport type { ApiType } from './types'\n\nexport default class BaseApi {\n\n  baseUrl: string = ''\n  baseOptions: Object = {}\n\n  constructor (api: ApiType, baseOptions?: Object = {}) {\n    if (process.env.NODE_ENV !== 'development') {\n      this.baseUrl = api.proxyUrl\n    }\n    this.baseOptions = baseOptions\n  }\n\n  sendRequest (url: string, options: Object = {}) {\n    return fetch(this.baseUrl + url, Object.assign({}, this.baseOptions, options))\n      .catch(console.error)\n  }\n}\n","\nexport function convertUnixToDateTime (unixTimestamp) {\n  const date = new Date(1000 * unixTimestamp)\n  return date.toLocaleDateString() + ' (' + date.toLocaleTimeString() + ')'\n}\n","import React from 'react'\n\nconst BlockContext = React.createContext(\n  {\n    hash: '',\n    updateHash: () => {}\n  }\n)\nexport default BlockContext\n","const styles = theme => ({\n  card: {\n    width: '100%',\n    padding: '0 1rem'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  tableTitle: {\n    fontSize: 15,\n    fontWeight: '500',\n    padding: '1.5rem 0 .4rem'\n  },\n  tableContainer: {\n    maxWidth: 400,\n    flexGrow: 1,\n    paddingRight: '1rem !important',\n    '& tr:nth-of-type(odd)': {\n      backgroundColor: '#fcfcfc'\n    }\n  },\n  hashesContainer: {\n    width: '100%',\n    maxWidth: 500\n  },\n  blockHash: {\n    '& a': {\n      textDecoration: 'none'\n    },\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n})\nexport default styles\n","// @flow\nimport React from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Grid from '@material-ui/core/Grid'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\n\nimport Link from 'src/elements/Link'\nimport PageDirectory from 'src/pages/PageDirectory'\nimport { convertUnixToDateTime } from 'src/utility/datetime/DateFunctions'\n\nimport type { BlockType } from '../types'\nimport BlockContext from '../context'\nimport styles from './styles'\n\nconst tableRow = (title, value) => (\n  <TableRow>\n    <TableCell>{ title }</TableCell>\n    <TableCell>{ value }</TableCell>\n  </TableRow>\n)\n\ntype Props = {\n  classes: Object,\n  blockData: BlockType\n}\nclass BlockSummaryCard extends React.Component<Props> {\n\n  static contextType = BlockContext;\n\n  render () {\n    const { classes } = this.props\n    const data = this.props.blockData\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Grid container justify='flex-start' spacing={16}>\n            <Grid item md={5} className={classes.tableContainer}>\n              <Typography className={classes.tableTitle}>\n                Summary\n              </Typography>\n              <Table>\n                <TableBody>\n                  { tableRow('Number of Transactions', data.n_tx) }\n                  { tableRow('Timestamp', convertUnixToDateTime(data.time)) }\n                  { tableRow('Transaction Fees', (data.fee / 100000000) + ' BTC') }\n                  { tableRow('Height', data.height) }\n                  { tableRow('Bits', data.bits) }\n                </TableBody>\n              </Table>\n            </Grid>\n            <Grid item className={classes.hashesContainer}>\n              <Typography className={classes.tableTitle}>Hash</Typography>\n              <Typography className={classes.blockHash}>{ data.hash }</Typography>\n\n              <Typography className={classes.tableTitle}>Previous Block</Typography>\n              <Typography color='primary' className={classes.blockHash}>\n                <Link\n                  url={PageDirectory.BLOCK_DETAILS_PAGE.path.replace(':id', data.prev_block)}\n                  onClick={() => { this.context.updateHash(data.prev_block) }}\n                >\n                  { data.prev_block }\n                </Link>\n              </Typography>\n\n              { data.next_block.length > 0 &&\n                <Typography className={classes.tableTitle}>Next Block</Typography>\n              }\n              <Typography color='primary' className={classes.blockHash}>\n                { data.next_block.map(hash => (\n                  <Link\n                    key={hash}\n                    url={PageDirectory.BLOCK_DETAILS_PAGE.path.replace(':id', hash)}\n                    onClick={() => { this.context.updateHash(hash) }}\n                  >\n                    { hash }\n                  </Link>\n                ))}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Grid container justify='center'>\n            <Button\n              size='small'\n              color='primary'\n              onClick={() => { window.open('https://www.blockchain.com/btc/block/' + data.hash, '_blank') }}\n            >\n              View block on blockchain.com\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nexport default withStyles(styles)(BlockSummaryCard)\n","const styles = {\n  root: {\n    width: '100%'\n  },\n  transactionHeader: {\n    cursor: 'pointer'\n  },\n  transactionDetails: {\n    '&> div': {\n      boxShadow: 'none'\n    }\n  }\n}\nexport default styles\n","const tableHeight = 240\n\nconst styles = theme => ({\n  card: {\n    height: 400,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: '500',\n  },\n  hash: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingBottom: '2rem'\n  },\n  error: {\n    fontSize: 14,\n    color: '#333',\n    width: '75%'\n  },\n  loadingContainer: {\n    height: tableHeight,\n    flexGrow: 1\n  },\n  table: {\n    height: tableHeight,\n    maxWidth: 400,\n    flexGrow: 1,\n    '& tr:nth-of-type(odd)': {\n      backgroundColor: '#fcfcfc'\n    }\n  }\n})\nexport default styles\n","// @flow\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport BlockchainApi from 'src/api/BlockchainApi'\nimport { convertUnixToDateTime } from 'src/utility/datetime/DateFunctions'\n\nimport type { TransactionType } from '../types'\n\nimport styles from './styles'\n\nconst tableRow = (title, value) => (\n  <TableRow>\n    <TableCell>{ title }</TableCell>\n    <TableCell>{ value }</TableCell>\n  </TableRow>\n)\n\ntype Props = {\n  classes: Object,\n  data?: TransactionType,\n  hash: string\n}\ntype State = {\n  apiError: boolean,\n  isLoading: boolean,\n  transactionData?: TransactionType\n}\nconst initialState = ({ data }) => ({\n  apiError: false,\n  isLoading: false,\n  transactionData: data\n})\nclass TransactionCard extends React.Component<Props, State> {\n\n  constructor (props) {\n    super(props)\n    this.state = initialState(props)\n  }\n\n  componentDidMount (): void {\n    if (!this.props.data) {\n      this.fetchTransactionData()\n    }\n  }\n\n  static getDerivedStateFromProps (nextProps, prevState) {\n    if (!prevState.transactionData || (prevState.transactionData.hash !== nextProps.hash)) {\n      return initialState(nextProps)\n    }\n    return null\n  }\n\n  componentDidUpdate (prevProps: Props): void {\n    if (!this.props.data && prevProps.hash !== this.props.hash) {\n      this.fetchTransactionData()\n    }\n  }\n\n  fetchTransactionData = () => {\n    if (!this.state.isLoading) {\n      new BlockchainApi().getTransactionDetails(this.props.hash)\n        .catch(() => {\n          this.setState({\n            apiError: true,\n            isLoading: false\n          })\n        })\n        .then(result => {\n          this.setState({ transactionData: result })\n        })\n\n      this.setState({ isLoading: true })\n    }\n  }\n\n  render () {\n    const { classes } = this.props\n    const data = this.state.transactionData\n\n    return (\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title}>Hash</Typography>\n          <Typography className={classes.hash} color='textSecondary'>\n            {this.props.hash}\n          </Typography>\n          {\n            data ? (\n              <Table className={classes.table}>\n                <TableBody>\n                  { tableRow('Created Date', convertUnixToDateTime(data.time)) }\n                  { tableRow('Transaction Index', data.tx_index) }\n                  { tableRow('Size', data.size + ' (bytes)') }\n                  { tableRow('Block Index', data.block_index) }\n                  { tableRow('Block Height', data.block_height) }\n                </TableBody>\n              </Table>\n            ) : (\n              <Grid container justify='center' alignItems='center' className={classes.loadingContainer}>\n                { this.state.apiError &&\n                  <Typography className={classes.error}>\n                    Oops! There was an error retrieving transaction details for this hash.\n                  </Typography>\n                }\n                { !data && !this.state.apiError &&\n                  <CircularProgress size={60} />\n                }\n              </Grid>\n            )\n          }\n        </CardContent>\n        <CardActions>\n          <Grid container justify='center'>\n            <Button\n              size='small'\n              color='primary'\n              onClick={() => { window.open('https://www.blockchain.com/btc/tx/' + this.props.hash, '_blank') }}\n            >\n              View on blockchain.com\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    )\n  }\n}\nexport default withStyles(styles)(TransactionCard)\n","// @flow\nimport React from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport TableBody from '@material-ui/core/TableBody'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Button from '@material-ui/core/Button'\nimport TouchRipple from '@material-ui/core/ButtonBase'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nimport type { TransactionType } from '../types'\nimport styles from './styles'\nimport TransactionCard from '../TransactionCard'\n\ntype Props = {\n  classes: Object,\n  transactions: Array<TransactionType>\n}\ntype State = {\n  page: number,\n  selectedTransaction: ?TransactionType\n}\nclass TransactionListView extends React.Component<Props, State> {\n\n  state = {\n    page: 0,\n    selectedTransaction: undefined\n  }\n\n  handleTransactionSelected = (transaction) => {\n    const isAlreadySelected = this.state.selectedTransaction && (transaction.hash === this.state.selectedTransaction.hash)\n    this.setState({\n      selectedTransaction: isAlreadySelected ? undefined : transaction\n    })\n  }\n\n  render () {\n    const { classes, transactions } = this.props\n    const { selectedTransaction } = this.state\n    const transactionsInView = transactions.slice(this.state.page * 10, this.state.page * 10 + 10)\n\n    return (\n      <Card className={classes.root}>\n        <CardContent>\n          <Table className={classes.table}>\n            <TableBody>\n              {\n                transactionsInView.map((transaction: TransactionType) => {\n                  const isSelected = selectedTransaction && (selectedTransaction.hash === transaction.hash)\n                  return (\n                    <React.Fragment key={transaction.tx_index}>\n                      <TableRow>\n                        <TableCell\n                          onClick={() => { this.handleTransactionSelected(transaction) }}\n                        >\n                          <Grid container justify='space-between' className={classes.transactionHeader}>\n                            <TouchRipple>\n                              <Typography>\n                                Transaction Index #{transaction.tx_index}\n                              </Typography>\n                            </TouchRipple>\n                            <Button>\n                              { isSelected ? (<ExpandLessIcon />) : (<ExpandMoreIcon />) }\n                            </Button>\n                          </Grid>\n                        </TableCell>\n                      </TableRow>\n                      { isSelected &&\n                        <TableRow>\n                          <TableCell className={classes.transactionDetails}>\n                            <TransactionCard\n                              data={selectedTransaction}\n                              // $FlowFixMe (flow should be able to deduce that selectedTransaction is defined here)\n                              hash={selectedTransaction.hash}\n                            />\n                          </TableCell>\n                        </TableRow>\n                      }\n                    </React.Fragment>\n                  )\n                })\n              }\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[10]}\n                  colSpan={3}\n                  count={this.props.transactions.length}\n                  rowsPerPage={10}\n                  page={this.state.page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={(e, page) => { this.setState({ page }) }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </CardContent>\n      </Card>\n    )\n  }\n}\nexport default withStyles(styles)(TransactionListView)\n","const styles = {\n  title: {\n    paddingBottom: '.5rem'\n  },\n  tabContainer: {\n    width: '100%',\n    minHeight: 200\n  }\n}\nexport default styles\n","// @flow\nimport React from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Tabs from '@material-ui/core/es/Tabs/Tabs'\nimport { Tab } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\n\nimport BlockchainApi from 'src/api/BlockchainApi'\nimport BlockSummaryCard from 'src/features/blocks/BlockSummaryCard'\nimport TransactionListView from 'src/features/transactions/TransactionListView'\n\nimport styles from './styles'\nimport type { BlockType } from '../types'\n\ntype Props = {\n  classes: Object,\n  data?: BlockType,\n  hash: string\n}\ntype State = {\n  apiError: boolean,\n  blockData: ?BlockType,\n  isLoading: boolean,\n  tabIndex: number\n}\nconst initialState = ({ data }) => ({\n  apiError: false,\n  blockData: data,\n  isLoading: false,\n  tabIndex: 0\n})\nclass BlockDashboard extends React.Component<Props, State> {\n\n  constructor (props) {\n    super(props)\n    this.state = initialState(props)\n  }\n\n  componentDidMount (): void {\n    if (!this.props.data) {\n      this.fetchBlockDetails()\n    }\n  }\n\n  static getDerivedStateFromProps (nextProps: Props, prevState: State) {\n    if (!prevState.blockData || prevState.blockData.hash !== nextProps.hash) {\n      return initialState(nextProps)\n    }\n    return null\n  }\n\n  componentDidUpdate (prevProps: Props): void {\n    if (prevProps.hash !== this.props.hash) {\n      this.fetchBlockDetails()\n    }\n  }\n\n  fetchBlockDetails = () => {\n    if (!this.state.isLoading) {\n      new BlockchainApi().getBlockDetails(this.props.hash)\n        .catch(() => {\n          this.setState({\n            apiError: true,\n            isLoading: false\n          })\n        })\n        .then(result => {\n          this.setState({ blockData: result })\n        })\n\n      this.setState({ isLoading: true })\n    }\n  }\n\n  render () {\n    const data = this.state.blockData\n    return (\n      <>\n        <Typography variant='h6' className={this.props.classes.title}>\n          { data ? `Block #${data.block_index}` : 'Loading block...' }\n        </Typography>\n        <Paper>\n          <Tabs\n            value={this.state.tabIndex}\n            onChange={(e, value) => { this.setState({ tabIndex: value }) }}\n            indicatorColor='primary'\n            textColor='primary'\n            centered\n          >\n            <Tab label='Summary' />\n            <Tab label='Transactions' />\n          </Tabs>\n        </Paper>\n        <Grid container className={this.props.classes.tabContainer}>\n          { this.state.tabIndex === 0 && data && <BlockSummaryCard blockData={data} /> }\n          { this.state.tabIndex === 1 && data && <TransactionListView transactions={data.tx} /> }\n          { !data && this.state.apiError &&\n            <Typography>\n              Oops! There was an error retrieving block details for this hash.\n            </Typography>\n          }\n          { !data && !this.state.apiError &&\n            <Grid container justify='center' alignItems='center'>\n              <CircularProgress size={60} />\n            </Grid>\n          }\n        </Grid>\n      </>\n    )\n  }\n}\nexport default withStyles(styles)(BlockDashboard)\n","const styles = {\n  toolbar: {\n    marginBottom: '2rem'\n  },\n  grow: {\n    flexGrow: 1\n  }\n}\nexport default styles\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport DefaultTemplate from 'src/templates/DefaultTemplate'\nimport BlockDashboard from 'src/features/blocks/BlockDashboard'\nimport BlockContext from 'src/features/blocks/context'\nimport type { LatestBlockType } from 'src/features/blocks/types'\nimport BlockchainApi from 'src/api/BlockchainApi'\n\nimport styles from './styles'\n\ntype Props = {\n  classes: Object\n}\ntype State = {\n  isWebSocketEnabled: boolean,\n  latestBlockHash: string\n}\nclass NewBlocksPage extends React.Component<Props, State> {\n\n  state = {\n    isWebSocketEnabled: true\n  }\n\n  componentDidMount (): void {\n    new BlockchainApi().getLatestBlock()\n      .then((result: LatestBlockType) => {\n        this.setState({ latestBlockHash: result.hash })\n      })\n\n    this.socket = new WebSocket('wss://ws.blockchain.info/inv')\n    this.socket.onopen = () => {\n      this.startWebSocket()\n    }\n    this.socket.onmessage = (event) => {\n      const data = JSON.parse(event.data)\n      if (data.x) {\n        this.updateHash(data.x.hash)\n      }\n    }\n  }\n\n  componentWillUnmount (): void {\n    this.socket.close()\n  }\n\n  updateHash = (newHash) => {\n    this.setState({ latestBlockHash: newHash })\n  }\n\n  toggleAutoUpdate = () => {\n    const isWebSocketEnabled = !this.state.isWebSocketEnabled\n    isWebSocketEnabled ? this.startWebSocket() : this.stopWebSocket()\n    this.setState({ isWebSocketEnabled })\n  }\n\n  startWebSocket = () => {\n    this.socket.send(JSON.stringify({\n      op: 'blocks_sub'\n    }))\n  }\n\n  stopWebSocket = () => {\n    this.socket.send(JSON.stringify({\n      op: 'blocks_unsub'\n    }))\n  }\n\n  render () {\n    const { classes } = this.props\n\n    return (\n      <DefaultTemplate>\n        <AppBar position='static' color='default' className={classes.toolbar}>\n          <Toolbar>\n            <Typography variant='h6' color='inherit' className={classes.grow}>\n              Latest Block\n            </Typography>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={this.state.isWebSocketEnabled}\n                  onChange={this.toggleAutoUpdate}\n                  value='checkedB'\n                  color='primary'\n                />\n              }\n              label='Auto Update'\n              labelPlacement='start'\n            />\n          </Toolbar>\n        </AppBar>\n        { this.state.latestBlockHash &&\n          <BlockContext.Provider\n            value={{\n              hash: this.state.latestBlockHash,\n              updateHash: this.updateHash\n            }}\n          >\n            <BlockDashboard hash={this.state.latestBlockHash} />\n          </BlockContext.Provider>\n        }\n      </DefaultTemplate>\n    )\n  }\n}\nexport default withStyles(styles)(NewBlocksPage)\n","import React from 'react'\n\nimport DefaultTemplate from 'src/templates/DefaultTemplate'\nimport BlockDashboard from 'src/features/blocks/BlockDashboard'\nimport BlockContext from 'src/features/blocks/context'\n\ntype Props = {\n  classes: Object,\n  match: {\n    params: {\n      id: string\n    }\n  }\n}\ntype State = {\n  hash: string,\n  updateHash: () => void\n}\nexport default class BlockDetailsPage extends React.Component<Props, State> {\n\n  constructor (props: Props) {\n    super(props)\n    this.state = {\n      hash: props.match.params.id,\n      updateHash: this.updateHash\n    }\n  }\n\n  updateHash = (newHash) => {\n    this.setState({ hash: newHash })\n  }\n\n  render () {\n    return (\n      <DefaultTemplate>\n        <BlockContext.Provider value={this.state}>\n          <BlockDashboard hash={this.state.hash} />\n        </BlockContext.Provider>\n      </DefaultTemplate>\n    )\n  }\n}\n","const styles = {\n  container: {\n    maxWidth: 550,\n    margin: 'auto'\n  },\n  title: {\n    paddingBottom: '.5rem'\n  }\n}\nexport default styles\n","import React from 'react'\n\nimport DefaultTemplate from 'src/templates/DefaultTemplate'\nimport TransactionCard from 'src/features/transactions/TransactionCard'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport styles from './styles'\n\ntype Props = {\n  classes: Object,\n  match: {\n    params: {\n      id: string\n    }\n  }\n}\nclass TransactionDetailsPage extends React.Component<Props> {\n\n  render () {\n    return (\n      <DefaultTemplate>\n        <Grid container justify='center' className={this.props.classes.container}>\n          <Grid item xs={12}>\n            <Typography variant='h6' className={this.props.classes.title}>\n              Transaction\n            </Typography>\n            <TransactionCard hash={this.props.match.params.id} />\n          </Grid>\n        </Grid>\n      </DefaultTemplate>\n    )\n  }\n}\nexport default withStyles(styles)(TransactionDetailsPage)\n","import NewBlocksPage from './NewBlocksPage'\nimport BlockDetailsPage from './BlockDetailsPage'\nimport TransactionDetailsPage from './TransactionDetailsPage'\n\nconst pageDirectory = {\n  NEW_BLOCKS_PAGE: {\n    path: '/new',\n    component: NewBlocksPage\n  },\n  BLOCK_DETAILS_PAGE: {\n    path: '/block/:id',\n    component: BlockDetailsPage\n  },\n  TRANSACTION_DETAILS_PAGE: {\n    path: '/tx/:id',\n    component: TransactionDetailsPage\n  }\n}\nexport default pageDirectory\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport Routes from './routes'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <Routes />\n  </>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport PageDirectory from './pages/PageDirectory'\n\nexport default function Routes () {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {\n          Object.keys(PageDirectory).map(key => {\n            return (\n              <Route\n                key={key}\n                exact\n                path={PageDirectory[key].path}\n                component={PageDirectory[key].component}\n              />\n            )\n          })\n        }\n        <Redirect to={PageDirectory.NEW_BLOCKS_PAGE.path} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n"],"sourceRoot":""}